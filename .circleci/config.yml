version: 2.1
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.14
        environment:
          DSS_PG_URL: postgres://root:password@localhost/circle_test?sslmode=disable
          GOPROXY: https://proxy.golang.org
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - run:
          name: install tools
          command: go get github.com/Houndie/toolbox@v0.3.0 && toolbox -v sync

      - run: 
          name: Wait on DB
          command: |
            timeout 300 sh -c \
              'until nc -z localhost 5432; do
                 echo "Waiting for port ..."
                 sleep 1
               done'

      - run: 
          name: Perform DB Migrations
          command: toolbox do -- migrate -path=dynamic/storage/postgres/migrations -database $DSS_PG_URL up

      - run: 
          name: Perform tests
          command: cd dynamic && go test ./...
  end-to-end:
    docker:
      - image: circleci/node:9.9.0
    steps:
      - checkout
      - run: git submodule sync --recursive && git submodule update --recursive --init

      - setup_remote_docker

      - run:
          name: Perform tests
          command: docker-compose -f docker-compose.yml -f docker-compose.circle.yml up --build --abort-on-container-exit 

      - run:
          name: Retrieve Test Results
          command: |
            mkdir junit 
            docker cp project_end_to_end_1:results.xml junit/
          when: always

      - store_test_results:
          path: junit/

      - store_artifacts:
          path: junit/


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - end-to-end
