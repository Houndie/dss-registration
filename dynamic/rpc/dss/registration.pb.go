// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: registration.proto

package dss

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FullWeekendPassTier int32

const (
	FullWeekendPassTier_Tier1 FullWeekendPassTier = 0
	FullWeekendPassTier_Tier2 FullWeekendPassTier = 1
	FullWeekendPassTier_Tier3 FullWeekendPassTier = 2
	FullWeekendPassTier_Tier4 FullWeekendPassTier = 3
	FullWeekendPassTier_Tier5 FullWeekendPassTier = 4
)

// Enum value maps for FullWeekendPassTier.
var (
	FullWeekendPassTier_name = map[int32]string{
		0: "Tier1",
		1: "Tier2",
		2: "Tier3",
		3: "Tier4",
		4: "Tier5",
	}
	FullWeekendPassTier_value = map[string]int32{
		"Tier1": 0,
		"Tier2": 1,
		"Tier3": 2,
		"Tier4": 3,
		"Tier5": 4,
	}
)

func (x FullWeekendPassTier) Enum() *FullWeekendPassTier {
	p := new(FullWeekendPassTier)
	*p = x
	return p
}

func (x FullWeekendPassTier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FullWeekendPassTier) Descriptor() protoreflect.EnumDescriptor {
	return file_registration_proto_enumTypes[0].Descriptor()
}

func (FullWeekendPassTier) Type() protoreflect.EnumType {
	return &file_registration_proto_enumTypes[0]
}

func (x FullWeekendPassTier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FullWeekendPassTier.Descriptor instead.
func (FullWeekendPassTier) EnumDescriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{0}
}

type FullWeekendPassLevel int32

const (
	FullWeekendPassLevel_Level1 FullWeekendPassLevel = 0
	FullWeekendPassLevel_Level2 FullWeekendPassLevel = 1
	FullWeekendPassLevel_Level3 FullWeekendPassLevel = 2
)

// Enum value maps for FullWeekendPassLevel.
var (
	FullWeekendPassLevel_name = map[int32]string{
		0: "Level1",
		1: "Level2",
		2: "Level3",
	}
	FullWeekendPassLevel_value = map[string]int32{
		"Level1": 0,
		"Level2": 1,
		"Level3": 2,
	}
)

func (x FullWeekendPassLevel) Enum() *FullWeekendPassLevel {
	p := new(FullWeekendPassLevel)
	*p = x
	return p
}

func (x FullWeekendPassLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FullWeekendPassLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_registration_proto_enumTypes[1].Descriptor()
}

func (FullWeekendPassLevel) Type() protoreflect.EnumType {
	return &file_registration_proto_enumTypes[1]
}

func (x FullWeekendPassLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FullWeekendPassLevel.Descriptor instead.
func (FullWeekendPassLevel) EnumDescriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{1}
}

type MixAndMatch_Role int32

const (
	MixAndMatch_Follower MixAndMatch_Role = 0
	MixAndMatch_Leader   MixAndMatch_Role = 1
)

// Enum value maps for MixAndMatch_Role.
var (
	MixAndMatch_Role_name = map[int32]string{
		0: "Follower",
		1: "Leader",
	}
	MixAndMatch_Role_value = map[string]int32{
		"Follower": 0,
		"Leader":   1,
	}
)

func (x MixAndMatch_Role) Enum() *MixAndMatch_Role {
	p := new(MixAndMatch_Role)
	*p = x
	return p
}

func (x MixAndMatch_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MixAndMatch_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_registration_proto_enumTypes[2].Descriptor()
}

func (MixAndMatch_Role) Type() protoreflect.EnumType {
	return &file_registration_proto_enumTypes[2]
}

func (x MixAndMatch_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MixAndMatch_Role.Descriptor instead.
func (MixAndMatch_Role) EnumDescriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{4, 0}
}

type TShirt_Style int32

const (
	TShirt_UnisexS   TShirt_Style = 0
	TShirt_UnisexM   TShirt_Style = 1
	TShirt_UnisexL   TShirt_Style = 2
	TShirt_UnisexXL  TShirt_Style = 3
	TShirt_Unisex2XL TShirt_Style = 4
	TShirt_Unisex3XL TShirt_Style = 5
	TShirt_BellaS    TShirt_Style = 6
	TShirt_BellaM    TShirt_Style = 7
	TShirt_BellaL    TShirt_Style = 8
	TShirt_BellaXL   TShirt_Style = 9
	TShirt_Bella2XL  TShirt_Style = 10
)

// Enum value maps for TShirt_Style.
var (
	TShirt_Style_name = map[int32]string{
		0:  "UnisexS",
		1:  "UnisexM",
		2:  "UnisexL",
		3:  "UnisexXL",
		4:  "Unisex2XL",
		5:  "Unisex3XL",
		6:  "BellaS",
		7:  "BellaM",
		8:  "BellaL",
		9:  "BellaXL",
		10: "Bella2XL",
	}
	TShirt_Style_value = map[string]int32{
		"UnisexS":   0,
		"UnisexM":   1,
		"UnisexL":   2,
		"UnisexXL":  3,
		"Unisex2XL": 4,
		"Unisex3XL": 5,
		"BellaS":    6,
		"BellaM":    7,
		"BellaL":    8,
		"BellaXL":   9,
		"Bella2XL":  10,
	}
)

func (x TShirt_Style) Enum() *TShirt_Style {
	p := new(TShirt_Style)
	*p = x
	return p
}

func (x TShirt_Style) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TShirt_Style) Descriptor() protoreflect.EnumDescriptor {
	return file_registration_proto_enumTypes[3].Descriptor()
}

func (TShirt_Style) Type() protoreflect.EnumType {
	return &file_registration_proto_enumTypes[3]
}

func (x TShirt_Style) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TShirt_Style.Descriptor instead.
func (TShirt_Style) EnumDescriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{7, 0}
}

type RegistrationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName     string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	StreetAddress string `protobuf:"bytes,4,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	City          string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	State         string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	ZipCode       string `protobuf:"bytes,7,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	Email         string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	HomeScene     string `protobuf:"bytes,9,opt,name=home_scene,json=homeScene,proto3" json:"home_scene,omitempty"`
	IsStudent     bool   `protobuf:"varint,10,opt,name=is_student,json=isStudent,proto3" json:"is_student,omitempty"`
	// Types that are assignable to PassType:
	//	*RegistrationInfo_FullWeekendPass
	//	*RegistrationInfo_DanceOnlyPass
	//	*RegistrationInfo_NoPass
	PassType        isRegistrationInfo_PassType `protobuf_oneof:"pass_type"`
	MixAndMatch     *MixAndMatch                `protobuf:"bytes,14,opt,name=mix_and_match,json=mixAndMatch,proto3" json:"mix_and_match,omitempty"`
	SoloJazz        *SoloJazz                   `protobuf:"bytes,15,opt,name=solo_jazz,json=soloJazz,proto3" json:"solo_jazz,omitempty"`
	TeamCompetition *TeamCompetition            `protobuf:"bytes,16,opt,name=team_competition,json=teamCompetition,proto3" json:"team_competition,omitempty"`
	Tshirt          *TShirt                     `protobuf:"bytes,17,opt,name=tshirt,proto3" json:"tshirt,omitempty"`
	// Types that are assignable to Housing:
	//	*RegistrationInfo_ProvideHousing
	//	*RegistrationInfo_RequireHousing
	//	*RegistrationInfo_NoHousing
	Housing       isRegistrationInfo_Housing `protobuf_oneof:"housing"`
	DiscountCodes []string                   `protobuf:"bytes,21,rep,name=discount_codes,json=discountCodes,proto3" json:"discount_codes,omitempty"`
	CreatedAt     string                     `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *RegistrationInfo) Reset() {
	*x = RegistrationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationInfo) ProtoMessage() {}

func (x *RegistrationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationInfo.ProtoReflect.Descriptor instead.
func (*RegistrationInfo) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{0}
}

func (x *RegistrationInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegistrationInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *RegistrationInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *RegistrationInfo) GetStreetAddress() string {
	if x != nil {
		return x.StreetAddress
	}
	return ""
}

func (x *RegistrationInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *RegistrationInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *RegistrationInfo) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *RegistrationInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegistrationInfo) GetHomeScene() string {
	if x != nil {
		return x.HomeScene
	}
	return ""
}

func (x *RegistrationInfo) GetIsStudent() bool {
	if x != nil {
		return x.IsStudent
	}
	return false
}

func (m *RegistrationInfo) GetPassType() isRegistrationInfo_PassType {
	if m != nil {
		return m.PassType
	}
	return nil
}

func (x *RegistrationInfo) GetFullWeekendPass() *FullWeekendPass {
	if x, ok := x.GetPassType().(*RegistrationInfo_FullWeekendPass); ok {
		return x.FullWeekendPass
	}
	return nil
}

func (x *RegistrationInfo) GetDanceOnlyPass() *DanceOnlyPass {
	if x, ok := x.GetPassType().(*RegistrationInfo_DanceOnlyPass); ok {
		return x.DanceOnlyPass
	}
	return nil
}

func (x *RegistrationInfo) GetNoPass() *NoPass {
	if x, ok := x.GetPassType().(*RegistrationInfo_NoPass); ok {
		return x.NoPass
	}
	return nil
}

func (x *RegistrationInfo) GetMixAndMatch() *MixAndMatch {
	if x != nil {
		return x.MixAndMatch
	}
	return nil
}

func (x *RegistrationInfo) GetSoloJazz() *SoloJazz {
	if x != nil {
		return x.SoloJazz
	}
	return nil
}

func (x *RegistrationInfo) GetTeamCompetition() *TeamCompetition {
	if x != nil {
		return x.TeamCompetition
	}
	return nil
}

func (x *RegistrationInfo) GetTshirt() *TShirt {
	if x != nil {
		return x.Tshirt
	}
	return nil
}

func (m *RegistrationInfo) GetHousing() isRegistrationInfo_Housing {
	if m != nil {
		return m.Housing
	}
	return nil
}

func (x *RegistrationInfo) GetProvideHousing() *ProvideHousing {
	if x, ok := x.GetHousing().(*RegistrationInfo_ProvideHousing); ok {
		return x.ProvideHousing
	}
	return nil
}

func (x *RegistrationInfo) GetRequireHousing() *RequireHousing {
	if x, ok := x.GetHousing().(*RegistrationInfo_RequireHousing); ok {
		return x.RequireHousing
	}
	return nil
}

func (x *RegistrationInfo) GetNoHousing() *NoHousing {
	if x, ok := x.GetHousing().(*RegistrationInfo_NoHousing); ok {
		return x.NoHousing
	}
	return nil
}

func (x *RegistrationInfo) GetDiscountCodes() []string {
	if x != nil {
		return x.DiscountCodes
	}
	return nil
}

func (x *RegistrationInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type isRegistrationInfo_PassType interface {
	isRegistrationInfo_PassType()
}

type RegistrationInfo_FullWeekendPass struct {
	FullWeekendPass *FullWeekendPass `protobuf:"bytes,11,opt,name=full_weekend_pass,json=fullWeekendPass,proto3,oneof"`
}

type RegistrationInfo_DanceOnlyPass struct {
	DanceOnlyPass *DanceOnlyPass `protobuf:"bytes,12,opt,name=dance_only_pass,json=danceOnlyPass,proto3,oneof"`
}

type RegistrationInfo_NoPass struct {
	NoPass *NoPass `protobuf:"bytes,13,opt,name=no_pass,json=noPass,proto3,oneof"`
}

func (*RegistrationInfo_FullWeekendPass) isRegistrationInfo_PassType() {}

func (*RegistrationInfo_DanceOnlyPass) isRegistrationInfo_PassType() {}

func (*RegistrationInfo_NoPass) isRegistrationInfo_PassType() {}

type isRegistrationInfo_Housing interface {
	isRegistrationInfo_Housing()
}

type RegistrationInfo_ProvideHousing struct {
	ProvideHousing *ProvideHousing `protobuf:"bytes,18,opt,name=provide_housing,json=provideHousing,proto3,oneof"`
}

type RegistrationInfo_RequireHousing struct {
	RequireHousing *RequireHousing `protobuf:"bytes,19,opt,name=require_housing,json=requireHousing,proto3,oneof"`
}

type RegistrationInfo_NoHousing struct {
	NoHousing *NoHousing `protobuf:"bytes,20,opt,name=no_housing,json=noHousing,proto3,oneof"`
}

func (*RegistrationInfo_ProvideHousing) isRegistrationInfo_Housing() {}

func (*RegistrationInfo_RequireHousing) isRegistrationInfo_Housing() {}

func (*RegistrationInfo_NoHousing) isRegistrationInfo_Housing() {}

type FullWeekendPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tier  FullWeekendPassTier  `protobuf:"varint,1,opt,name=tier,proto3,enum=dss.FullWeekendPassTier" json:"tier,omitempty"`
	Level FullWeekendPassLevel `protobuf:"varint,2,opt,name=level,proto3,enum=dss.FullWeekendPassLevel" json:"level,omitempty"`
	Paid  bool                 `protobuf:"varint,3,opt,name=paid,proto3" json:"paid,omitempty"`
}

func (x *FullWeekendPass) Reset() {
	*x = FullWeekendPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullWeekendPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullWeekendPass) ProtoMessage() {}

func (x *FullWeekendPass) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullWeekendPass.ProtoReflect.Descriptor instead.
func (*FullWeekendPass) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{1}
}

func (x *FullWeekendPass) GetTier() FullWeekendPassTier {
	if x != nil {
		return x.Tier
	}
	return FullWeekendPassTier_Tier1
}

func (x *FullWeekendPass) GetLevel() FullWeekendPassLevel {
	if x != nil {
		return x.Level
	}
	return FullWeekendPassLevel_Level1
}

func (x *FullWeekendPass) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type DanceOnlyPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paid bool `protobuf:"varint,1,opt,name=paid,proto3" json:"paid,omitempty"`
}

func (x *DanceOnlyPass) Reset() {
	*x = DanceOnlyPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DanceOnlyPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DanceOnlyPass) ProtoMessage() {}

func (x *DanceOnlyPass) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DanceOnlyPass.ProtoReflect.Descriptor instead.
func (*DanceOnlyPass) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{2}
}

func (x *DanceOnlyPass) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type NoPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoPass) Reset() {
	*x = NoPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoPass) ProtoMessage() {}

func (x *NoPass) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoPass.ProtoReflect.Descriptor instead.
func (*NoPass) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{3}
}

type MixAndMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role MixAndMatch_Role `protobuf:"varint,1,opt,name=role,proto3,enum=dss.MixAndMatch_Role" json:"role,omitempty"`
	Paid bool             `protobuf:"varint,2,opt,name=paid,proto3" json:"paid,omitempty"`
}

func (x *MixAndMatch) Reset() {
	*x = MixAndMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixAndMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixAndMatch) ProtoMessage() {}

func (x *MixAndMatch) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixAndMatch.ProtoReflect.Descriptor instead.
func (*MixAndMatch) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{4}
}

func (x *MixAndMatch) GetRole() MixAndMatch_Role {
	if x != nil {
		return x.Role
	}
	return MixAndMatch_Follower
}

func (x *MixAndMatch) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type SoloJazz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paid bool `protobuf:"varint,1,opt,name=paid,proto3" json:"paid,omitempty"`
}

func (x *SoloJazz) Reset() {
	*x = SoloJazz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoloJazz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoloJazz) ProtoMessage() {}

func (x *SoloJazz) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoloJazz.ProtoReflect.Descriptor instead.
func (*SoloJazz) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{5}
}

func (x *SoloJazz) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type TeamCompetition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Paid bool   `protobuf:"varint,2,opt,name=paid,proto3" json:"paid,omitempty"`
}

func (x *TeamCompetition) Reset() {
	*x = TeamCompetition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamCompetition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamCompetition) ProtoMessage() {}

func (x *TeamCompetition) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamCompetition.ProtoReflect.Descriptor instead.
func (*TeamCompetition) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{6}
}

func (x *TeamCompetition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamCompetition) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type TShirt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Style TShirt_Style `protobuf:"varint,1,opt,name=style,proto3,enum=dss.TShirt_Style" json:"style,omitempty"`
	Paid  bool         `protobuf:"varint,2,opt,name=paid,proto3" json:"paid,omitempty"`
}

func (x *TShirt) Reset() {
	*x = TShirt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TShirt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TShirt) ProtoMessage() {}

func (x *TShirt) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TShirt.ProtoReflect.Descriptor instead.
func (*TShirt) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{7}
}

func (x *TShirt) GetStyle() TShirt_Style {
	if x != nil {
		return x.Style
	}
	return TShirt_UnisexS
}

func (x *TShirt) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type ProvideHousing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pets     string `protobuf:"bytes,1,opt,name=pets,proto3" json:"pets,omitempty"`
	Quantity int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Details  string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ProvideHousing) Reset() {
	*x = ProvideHousing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvideHousing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideHousing) ProtoMessage() {}

func (x *ProvideHousing) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideHousing.ProtoReflect.Descriptor instead.
func (*ProvideHousing) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{8}
}

func (x *ProvideHousing) GetPets() string {
	if x != nil {
		return x.Pets
	}
	return ""
}

func (x *ProvideHousing) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProvideHousing) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type RequireHousing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetAllergies string `protobuf:"bytes,1,opt,name=pet_allergies,json=petAllergies,proto3" json:"pet_allergies,omitempty"`
	Details      string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *RequireHousing) Reset() {
	*x = RequireHousing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequireHousing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequireHousing) ProtoMessage() {}

func (x *RequireHousing) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequireHousing.ProtoReflect.Descriptor instead.
func (*RequireHousing) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{9}
}

func (x *RequireHousing) GetPetAllergies() string {
	if x != nil {
		return x.PetAllergies
	}
	return ""
}

func (x *RequireHousing) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type NoHousing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoHousing) Reset() {
	*x = NoHousing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoHousing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoHousing) ProtoMessage() {}

func (x *NoHousing) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoHousing.ProtoReflect.Descriptor instead.
func (*NoHousing) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{10}
}

type RegistrationAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *RegistrationInfo `protobuf:"bytes,1,opt,name=registration,proto3" json:"registration,omitempty"`
}

func (x *RegistrationAddReq) Reset() {
	*x = RegistrationAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationAddReq) ProtoMessage() {}

func (x *RegistrationAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationAddReq.ProtoReflect.Descriptor instead.
func (*RegistrationAddReq) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{11}
}

func (x *RegistrationAddReq) GetRegistration() *RegistrationInfo {
	if x != nil {
		return x.Registration
	}
	return nil
}

type RegistrationAddRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *RegistrationInfo `protobuf:"bytes,1,opt,name=registration,proto3" json:"registration,omitempty"`
}

func (x *RegistrationAddRes) Reset() {
	*x = RegistrationAddRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationAddRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationAddRes) ProtoMessage() {}

func (x *RegistrationAddRes) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationAddRes.ProtoReflect.Descriptor instead.
func (*RegistrationAddRes) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{12}
}

func (x *RegistrationAddRes) GetRegistration() *RegistrationInfo {
	if x != nil {
		return x.Registration
	}
	return nil
}

type RegistrationPayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IdempotencyKey string `protobuf:"bytes,2,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	RedirectUrl    string `protobuf:"bytes,3,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *RegistrationPayReq) Reset() {
	*x = RegistrationPayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationPayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationPayReq) ProtoMessage() {}

func (x *RegistrationPayReq) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationPayReq.ProtoReflect.Descriptor instead.
func (*RegistrationPayReq) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{13}
}

func (x *RegistrationPayReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegistrationPayReq) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *RegistrationPayReq) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type RegistrationPayRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckoutUrl string `protobuf:"bytes,1,opt,name=checkout_url,json=checkoutUrl,proto3" json:"checkout_url,omitempty"`
}

func (x *RegistrationPayRes) Reset() {
	*x = RegistrationPayRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationPayRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationPayRes) ProtoMessage() {}

func (x *RegistrationPayRes) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationPayRes.ProtoReflect.Descriptor instead.
func (*RegistrationPayRes) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{14}
}

func (x *RegistrationPayRes) GetCheckoutUrl() string {
	if x != nil {
		return x.CheckoutUrl
	}
	return ""
}

type RegistrationGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegistrationGetReq) Reset() {
	*x = RegistrationGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationGetReq) ProtoMessage() {}

func (x *RegistrationGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationGetReq.ProtoReflect.Descriptor instead.
func (*RegistrationGetReq) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{15}
}

func (x *RegistrationGetReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RegistrationGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *RegistrationInfo `protobuf:"bytes,1,opt,name=registration,proto3" json:"registration,omitempty"`
}

func (x *RegistrationGetRes) Reset() {
	*x = RegistrationGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationGetRes) ProtoMessage() {}

func (x *RegistrationGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationGetRes.ProtoReflect.Descriptor instead.
func (*RegistrationGetRes) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{16}
}

func (x *RegistrationGetRes) GetRegistration() *RegistrationInfo {
	if x != nil {
		return x.Registration
	}
	return nil
}

type RegistrationPricesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegistrationPricesReq) Reset() {
	*x = RegistrationPricesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationPricesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationPricesReq) ProtoMessage() {}

func (x *RegistrationPricesReq) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationPricesReq.ProtoReflect.Descriptor instead.
func (*RegistrationPricesReq) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{17}
}

type RegistrationPricesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeekendPassTier FullWeekendPassTier `protobuf:"varint,1,opt,name=weekend_pass_tier,json=weekendPassTier,proto3,enum=dss.FullWeekendPassTier" json:"weekend_pass_tier,omitempty"`
}

func (x *RegistrationPricesRes) Reset() {
	*x = RegistrationPricesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationPricesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationPricesRes) ProtoMessage() {}

func (x *RegistrationPricesRes) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationPricesRes.ProtoReflect.Descriptor instead.
func (*RegistrationPricesRes) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{18}
}

func (x *RegistrationPricesRes) GetWeekendPassTier() FullWeekendPassTier {
	if x != nil {
		return x.WeekendPassTier
	}
	return FullWeekendPassTier_Tier1
}

type RegistrationUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *RegistrationInfo `protobuf:"bytes,1,opt,name=registration,proto3" json:"registration,omitempty"`
}

func (x *RegistrationUpdateReq) Reset() {
	*x = RegistrationUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationUpdateReq) ProtoMessage() {}

func (x *RegistrationUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationUpdateReq.ProtoReflect.Descriptor instead.
func (*RegistrationUpdateReq) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{19}
}

func (x *RegistrationUpdateReq) GetRegistration() *RegistrationInfo {
	if x != nil {
		return x.Registration
	}
	return nil
}

type RegistrationUpdateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *RegistrationInfo `protobuf:"bytes,1,opt,name=registration,proto3" json:"registration,omitempty"`
}

func (x *RegistrationUpdateRes) Reset() {
	*x = RegistrationUpdateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationUpdateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationUpdateRes) ProtoMessage() {}

func (x *RegistrationUpdateRes) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationUpdateRes.ProtoReflect.Descriptor instead.
func (*RegistrationUpdateRes) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{20}
}

func (x *RegistrationUpdateRes) GetRegistration() *RegistrationInfo {
	if x != nil {
		return x.Registration
	}
	return nil
}

type RegistrationGetSummaryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegistrationGetSummaryReq) Reset() {
	*x = RegistrationGetSummaryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationGetSummaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationGetSummaryReq) ProtoMessage() {}

func (x *RegistrationGetSummaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationGetSummaryReq.ProtoReflect.Descriptor instead.
func (*RegistrationGetSummaryReq) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{21}
}

type RegistrationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Paid      bool   `protobuf:"varint,6,opt,name=paid,proto3" json:"paid,omitempty"`
}

func (x *RegistrationSummary) Reset() {
	*x = RegistrationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationSummary) ProtoMessage() {}

func (x *RegistrationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationSummary.ProtoReflect.Descriptor instead.
func (*RegistrationSummary) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{22}
}

func (x *RegistrationSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegistrationSummary) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *RegistrationSummary) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *RegistrationSummary) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegistrationSummary) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RegistrationSummary) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type RegistrationGetSummaryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summaries []*RegistrationSummary `protobuf:"bytes,1,rep,name=summaries,proto3" json:"summaries,omitempty"`
}

func (x *RegistrationGetSummaryRes) Reset() {
	*x = RegistrationGetSummaryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registration_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationGetSummaryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationGetSummaryRes) ProtoMessage() {}

func (x *RegistrationGetSummaryRes) ProtoReflect() protoreflect.Message {
	mi := &file_registration_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationGetSummaryRes.ProtoReflect.Descriptor instead.
func (*RegistrationGetSummaryRes) Descriptor() ([]byte, []int) {
	return file_registration_proto_rawDescGZIP(), []int{23}
}

func (x *RegistrationGetSummaryRes) GetSummaries() []*RegistrationSummary {
	if x != nil {
		return x.Summaries
	}
	return nil
}

var File_registration_proto protoreflect.FileDescriptor

var file_registration_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x64, 0x73, 0x73, 0x22, 0x9f, 0x07, 0x0a, 0x10, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x7a,
	0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a,
	0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c,
	0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x66,
	0x75, 0x6c, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x12, 0x3c,
	0x0a, 0x0f, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x44, 0x61,
	0x6e, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x61, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x61, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x07,
	0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x64, 0x73, 0x73, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f,
	0x50, 0x61, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x0d, 0x6d, 0x69, 0x78, 0x5f, 0x61, 0x6e, 0x64, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x73,
	0x73, 0x2e, 0x4d, 0x69, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0b, 0x6d,
	0x69, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2a, 0x0a, 0x09, 0x73, 0x6f,
	0x6c, 0x6f, 0x5f, 0x6a, 0x61, 0x7a, 0x7a, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x73, 0x73, 0x2e, 0x53, 0x6f, 0x6c, 0x6f, 0x4a, 0x61, 0x7a, 0x7a, 0x52, 0x08, 0x73, 0x6f,
	0x6c, 0x6f, 0x4a, 0x61, 0x7a, 0x7a, 0x12, 0x3f, 0x0a, 0x10, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x06, 0x74, 0x73, 0x68, 0x69, 0x72,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x54, 0x53,
	0x68, 0x69, 0x72, 0x74, 0x52, 0x06, 0x74, 0x73, 0x68, 0x69, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x0a,
	0x6e, 0x6f, 0x5f, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x4e, 0x6f, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67,
	0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x0f,
	0x46, 0x75, 0x6c, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x12,
	0x2c, 0x0a, 0x04, 0x74, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x64, 0x73, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x54, 0x69, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x65, 0x72, 0x12, 0x2f, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x64,
	0x73, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61,
	0x69, 0x64, 0x22, 0x23, 0x0a, 0x0d, 0x44, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x22, 0x08, 0x0a, 0x06, 0x4e, 0x6f, 0x50, 0x61, 0x73,
	0x73, 0x22, 0x6e, 0x0a, 0x0b, 0x4d, 0x69, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x64, 0x73, 0x73, 0x2e, 0x4d, 0x69, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x22,
	0x20, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x10,
	0x01, 0x22, 0x1e, 0x0a, 0x08, 0x53, 0x6f, 0x6c, 0x6f, 0x4a, 0x61, 0x7a, 0x7a, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x69,
	0x64, 0x22, 0x39, 0x0a, 0x0f, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x22, 0xe1, 0x01, 0x0a,
	0x06, 0x54, 0x53, 0x68, 0x69, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x54, 0x53, 0x68,
	0x69, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x70, 0x61, 0x69, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x6e, 0x69, 0x73, 0x65, 0x78, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x6e, 0x69, 0x73, 0x65, 0x78, 0x4d, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x69, 0x73,
	0x65, 0x78, 0x4c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x73, 0x65, 0x78, 0x58,
	0x4c, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x73, 0x65, 0x78, 0x32, 0x58, 0x4c,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x73, 0x65, 0x78, 0x33, 0x58, 0x4c, 0x10,
	0x05, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x53, 0x10, 0x06, 0x12, 0x0a, 0x0a,
	0x06, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x4d, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x6c,
	0x6c, 0x61, 0x4c, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x58, 0x4c,
	0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x32, 0x58, 0x4c, 0x10, 0x0a,
	0x22, 0x5a, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4f, 0x0a, 0x0e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x65, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x65, 0x72, 0x67,
	0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x0b, 0x0a,
	0x09, 0x4e, 0x6f, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x4f, 0x0a, 0x12, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x12, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x12,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65,
	0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x37,
	0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x24, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a,
	0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x73, 0x73, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17,
	0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x5d, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x44, 0x0a, 0x11, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x73,
	0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x54, 0x69, 0x65, 0x72, 0x52, 0x0f, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x54, 0x69, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x39, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x15, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x73, 0x73, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1b,
	0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x22, 0xaa, 0x01, 0x0a, 0x13,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2a, 0x4c, 0x0a,
	0x13, 0x46, 0x75, 0x6c, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x54, 0x69, 0x65, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x69, 0x65, 0x72, 0x31, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x54, 0x69, 0x65, 0x72, 0x32, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x69,
	0x65, 0x72, 0x33, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x69, 0x65, 0x72, 0x34, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x54, 0x69, 0x65, 0x72, 0x35, 0x10, 0x04, 0x2a, 0x3a, 0x0a, 0x14, 0x46,
	0x75, 0x6c, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x33, 0x10, 0x02, 0x32, 0x8b, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12,
	0x17, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x37, 0x0a, 0x03, 0x50, 0x61, 0x79, 0x12, 0x17, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x17, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x73, 0x73,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x1e, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x06, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x64, 0x73,
	0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x64, 0x73, 0x73, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x64, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x64, 0x73, 0x73, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x73, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registration_proto_rawDescOnce sync.Once
	file_registration_proto_rawDescData = file_registration_proto_rawDesc
)

func file_registration_proto_rawDescGZIP() []byte {
	file_registration_proto_rawDescOnce.Do(func() {
		file_registration_proto_rawDescData = protoimpl.X.CompressGZIP(file_registration_proto_rawDescData)
	})
	return file_registration_proto_rawDescData
}

var file_registration_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_registration_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_registration_proto_goTypes = []interface{}{
	(FullWeekendPassTier)(0),          // 0: dss.FullWeekendPassTier
	(FullWeekendPassLevel)(0),         // 1: dss.FullWeekendPassLevel
	(MixAndMatch_Role)(0),             // 2: dss.MixAndMatch.Role
	(TShirt_Style)(0),                 // 3: dss.TShirt.Style
	(*RegistrationInfo)(nil),          // 4: dss.RegistrationInfo
	(*FullWeekendPass)(nil),           // 5: dss.FullWeekendPass
	(*DanceOnlyPass)(nil),             // 6: dss.DanceOnlyPass
	(*NoPass)(nil),                    // 7: dss.NoPass
	(*MixAndMatch)(nil),               // 8: dss.MixAndMatch
	(*SoloJazz)(nil),                  // 9: dss.SoloJazz
	(*TeamCompetition)(nil),           // 10: dss.TeamCompetition
	(*TShirt)(nil),                    // 11: dss.TShirt
	(*ProvideHousing)(nil),            // 12: dss.ProvideHousing
	(*RequireHousing)(nil),            // 13: dss.RequireHousing
	(*NoHousing)(nil),                 // 14: dss.NoHousing
	(*RegistrationAddReq)(nil),        // 15: dss.RegistrationAddReq
	(*RegistrationAddRes)(nil),        // 16: dss.RegistrationAddRes
	(*RegistrationPayReq)(nil),        // 17: dss.RegistrationPayReq
	(*RegistrationPayRes)(nil),        // 18: dss.RegistrationPayRes
	(*RegistrationGetReq)(nil),        // 19: dss.RegistrationGetReq
	(*RegistrationGetRes)(nil),        // 20: dss.RegistrationGetRes
	(*RegistrationPricesReq)(nil),     // 21: dss.RegistrationPricesReq
	(*RegistrationPricesRes)(nil),     // 22: dss.RegistrationPricesRes
	(*RegistrationUpdateReq)(nil),     // 23: dss.RegistrationUpdateReq
	(*RegistrationUpdateRes)(nil),     // 24: dss.RegistrationUpdateRes
	(*RegistrationGetSummaryReq)(nil), // 25: dss.RegistrationGetSummaryReq
	(*RegistrationSummary)(nil),       // 26: dss.RegistrationSummary
	(*RegistrationGetSummaryRes)(nil), // 27: dss.RegistrationGetSummaryRes
}
var file_registration_proto_depIdxs = []int32{
	5,  // 0: dss.RegistrationInfo.full_weekend_pass:type_name -> dss.FullWeekendPass
	6,  // 1: dss.RegistrationInfo.dance_only_pass:type_name -> dss.DanceOnlyPass
	7,  // 2: dss.RegistrationInfo.no_pass:type_name -> dss.NoPass
	8,  // 3: dss.RegistrationInfo.mix_and_match:type_name -> dss.MixAndMatch
	9,  // 4: dss.RegistrationInfo.solo_jazz:type_name -> dss.SoloJazz
	10, // 5: dss.RegistrationInfo.team_competition:type_name -> dss.TeamCompetition
	11, // 6: dss.RegistrationInfo.tshirt:type_name -> dss.TShirt
	12, // 7: dss.RegistrationInfo.provide_housing:type_name -> dss.ProvideHousing
	13, // 8: dss.RegistrationInfo.require_housing:type_name -> dss.RequireHousing
	14, // 9: dss.RegistrationInfo.no_housing:type_name -> dss.NoHousing
	0,  // 10: dss.FullWeekendPass.tier:type_name -> dss.FullWeekendPassTier
	1,  // 11: dss.FullWeekendPass.level:type_name -> dss.FullWeekendPassLevel
	2,  // 12: dss.MixAndMatch.role:type_name -> dss.MixAndMatch.Role
	3,  // 13: dss.TShirt.style:type_name -> dss.TShirt.Style
	4,  // 14: dss.RegistrationAddReq.registration:type_name -> dss.RegistrationInfo
	4,  // 15: dss.RegistrationAddRes.registration:type_name -> dss.RegistrationInfo
	4,  // 16: dss.RegistrationGetRes.registration:type_name -> dss.RegistrationInfo
	0,  // 17: dss.RegistrationPricesRes.weekend_pass_tier:type_name -> dss.FullWeekendPassTier
	4,  // 18: dss.RegistrationUpdateReq.registration:type_name -> dss.RegistrationInfo
	4,  // 19: dss.RegistrationUpdateRes.registration:type_name -> dss.RegistrationInfo
	26, // 20: dss.RegistrationGetSummaryRes.summaries:type_name -> dss.RegistrationSummary
	15, // 21: dss.Registration.Add:input_type -> dss.RegistrationAddReq
	17, // 22: dss.Registration.Pay:input_type -> dss.RegistrationPayReq
	19, // 23: dss.Registration.Get:input_type -> dss.RegistrationGetReq
	25, // 24: dss.Registration.GetSummary:input_type -> dss.RegistrationGetSummaryReq
	21, // 25: dss.Registration.Prices:input_type -> dss.RegistrationPricesReq
	23, // 26: dss.Registration.Update:input_type -> dss.RegistrationUpdateReq
	16, // 27: dss.Registration.Add:output_type -> dss.RegistrationAddRes
	18, // 28: dss.Registration.Pay:output_type -> dss.RegistrationPayRes
	20, // 29: dss.Registration.Get:output_type -> dss.RegistrationGetRes
	27, // 30: dss.Registration.GetSummary:output_type -> dss.RegistrationGetSummaryRes
	22, // 31: dss.Registration.Prices:output_type -> dss.RegistrationPricesRes
	24, // 32: dss.Registration.Update:output_type -> dss.RegistrationUpdateRes
	27, // [27:33] is the sub-list for method output_type
	21, // [21:27] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_registration_proto_init() }
func file_registration_proto_init() {
	if File_registration_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_registration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullWeekendPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DanceOnlyPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MixAndMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoloJazz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamCompetition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TShirt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvideHousing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequireHousing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoHousing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationAddRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationPayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationPayRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationPricesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationPricesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationUpdateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationGetSummaryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registration_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationGetSummaryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_registration_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RegistrationInfo_FullWeekendPass)(nil),
		(*RegistrationInfo_DanceOnlyPass)(nil),
		(*RegistrationInfo_NoPass)(nil),
		(*RegistrationInfo_ProvideHousing)(nil),
		(*RegistrationInfo_RequireHousing)(nil),
		(*RegistrationInfo_NoHousing)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registration_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registration_proto_goTypes,
		DependencyIndexes: file_registration_proto_depIdxs,
		EnumInfos:         file_registration_proto_enumTypes,
		MessageInfos:      file_registration_proto_msgTypes,
	}.Build()
	File_registration_proto = out.File
	file_registration_proto_rawDesc = nil
	file_registration_proto_goTypes = nil
	file_registration_proto_depIdxs = nil
}
